<?php
/**
 * @file
 * Implements 'desirable fields' functionality.
 * 
 * 
 */
 
/**
 * Implements hook_menu().
 */
function desirable_fields_menu() {
  $items = array();
  
  // Create main menu item and set callback to 'desirable_fields_define' form.
  $items['admin/config/people/accounts/fields/desirable-fields'] = array(
    'title' => 'Desirable fields',
    'description' => 'Configure which fields are considered desirable and how they should be handled.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('desirable_fields_define'),
    'access arguments' => array('administer desirable_fields settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  // Make a default tab to encompass the above.
  $items['admin/config/people/accounts/fields/desirable-fields/settings'] = array(
    'title' => 'Set desirable fields',
    'description' => 'Configure which fields are considered desirable',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  
  // Make a new tab for listing user status regarding desirable fields.
  $items['admin/config/people/accounts/fields/desirable-fields/user-status'] = array(
    'title' => "View users' field status",
    'description' => 'See which users do not have desired fields set',
    'page callback' => 'desirable_fields_list',
    'access arguments' => array('view desirable_fields users'),
    'type' => MENU_LOCAL_TASK,
  );
  
  return $items;
}

/**
 * Administration form for defining which fields are desirable.
 */
function desirable_fields_define() {
  $form = array();
  
  $form['desirable_fields_selected_fields'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Desirable fields'),
    '#description' => t('Fields selected here are marked as desirable'),
    '#options' => _desirable_fields_list_all_fields(),
    '#default_value' => variable_get('desirable_fields_selected_fields', array()),
  );
  
  return system_settings_form($form);
}

/**
 * Administration list of users who haven't filled in desired fields.
 */
function desirable_fields_list() {
  $list_users = desirable_fields_list_users_missing_fields();
  // dpm($list_users);


  
  $list = array(
    '#markup' => 'test',
  );
  
  return $list;
}

/**
 * Returns the list of all available user fields.
 */
function _desirable_fields_list_all_fields() {
  $info = entity_get_property_info('user');
  $fields = array();
  
  foreach ($info['bundles']['user']['properties'] as $key => $field) {
    $fields[$key] = $field['label'];
  }
    
  return $fields;
}

/**
 * Returns all users who do not have desirable fields filled.
 * 
 * Returns an array of the following structure:
 * 
 * - {uid}
 *    - missing_fields
 *      - {field name}
 *      - {field name}
 *      - ...
 *    - name => {username}
 *    - profile_link => {relative user path}
 * - ...
 */
function desirable_fields_list_users_missing_fields() {
  $desirable_fields = variable_get('desirable_fields_selected_fields');
  
  // Remove unselected fields entirely
  foreach ($desirable_fields as $key => $field) {
    if ($field == '0') {
      unset($desirable_fields[$key]);
    }
  }
  
  // As a side note, in Drupal 8 it's entity_load_multiple()
  $users = entity_load('user');
  // Ignore anonymous user
  unset($users[0]);
    
  $users_missing_fields = array();
  // dpm($users);
  
  foreach ($users as $user) {
    $users_missing_fields[$user->uid] = array();
    $users_missing_fields[$user->uid]['missing_fields'] = array();
    foreach ($desirable_fields as $field_key => $field) {
      if (empty($user->$field_key)) {
        array_push($users_missing_fields[$user->uid]['missing_fields'], $field);
      }
    }
    // Bleh: there's a more efficient way I'm sure but don't want to redo the
    // foreach
    if(empty($users_missing_fields[$user->uid]['missing_fields'])) {
      unset($users_missing_fields[$user->uid]);
    }
    else {
      $users_missing_fields[$user->uid]['name'] = $user->name;
      $users_missing_fields[$user->uid]['profile_link'] = drupal_get_path_alias('user/' . $user->uid);
    }
  }
  
  dpm($users_missing_fields);
  
  return $users_missing_fields;
  
}
